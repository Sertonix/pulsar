linux_task:
  alias: linux
  container:
    image: node:16-slim
    memory: 8G
  install_script:
    - apt-get update
    - export DEBIAN_FRONTEND="noninteractive"
    - apt-get install -y
                rpm
                build-essential
                git
                libsecret-1-dev
                fakeroot
                libx11-dev
                libxkbfile-dev
                libgdk-pixbuf2.0-dev
                libgtk-3-dev
                libxss-dev
                libasound2-dev
                libnss3
                xvfb
    - sed -i -e "s/[0-9]*-dev/`date -u +%Y%m%d%H`/g" package.json
    - yarn install || yarn install
  build_script:
    - yarn build
  build_binary_script:
    - yarn dist || yarn dist
  binary_artifacts:
    path: ./binaries/*

arm_linux_task:
  alias: linux
  arm_container:
    image: node:16-slim
    memory: 8G
  env:
    USE_SYSTEM_FPM: 'true'
  install_script:
    - apt-get update
    - export DEBIAN_FRONTEND="noninteractive"
    - apt-get install -y
                gnupg2
                procps
                curl
                rpm
                build-essential
                git
                libsecret-1-dev
                fakeroot
                libx11-dev
                libxkbfile-dev
                libgdk-pixbuf2.0-dev
                libgtk-3-dev
                libxss-dev
                libasound2-dev
                libnss3
                xvfb
    - gpg2 --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB
    - \curl -sSL https://get.rvm.io | bash -s stable
    - source /etc/profile.d/rvm.sh
    - rvm install ruby
    - gem install fpm
    - sed -i -e "s/[0-9]*-dev/`date -u +%Y%m%d%H`/g" package.json
    - yarn install || yarn install
  build_script:
    - yarn build
    - rm -Rf node-modules/electron && yarn install --check-files
  build_binary_script:
    - source /etc/profile.d/rvm.sh
    - yarn dist || yarn dist
  binary_artifacts:
    path: ./binaries/*

silicon_mac_task:
  alias: mac
  macos_instance:
    image: ghcr.io/cirruslabs/macos-monterey-base:latest
    memory: 8G
  install_script:
    - brew install node@16 yarn git python
    - ln -s /opt/homebrew/bin/python3 /opt/homebrew/bin/python
    - export PATH="/opt/homebrew/bin:/opt/homebrew/opt/node@16/bin:$PATH"
    - sed -i -e "s/[0-9]*-dev/`date -u +%Y%m%d%H`/g" package.json
    - yarn install || yarn install
  build_script:
    - yarn build
  build_binary_script:
    - export PATH="/opt/homebrew/bin:/opt/homebrew/opt/node@16/bin:$PATH"
    - yarn dist || yarn dist
  binary_artifacts:
    path: ./binaries/*

intel_mac_task:
  alias: mac
  macos_instance:
    image: ghcr.io/cirruslabs/macos-monterey-base:latest
    memory: 8G
  install_script:
    - sudo rm -rf /Library/Developer/CommandLineTools
    - echo A | softwareupdate --install-rosetta
    - arch -x86_64 xcode-select --install
    - arch -x86_64 /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
    - export PATH="/usr/local/opt/node@16/bin:/usr/local/bin:$PATH"
    - arch -x86_64 brew install node@16 yarn git python
    - ln -s /usr/local/bin/python3 /usr/local/bin/python
    - sed -i -e "s/[0-9]*-dev/`date -u +%Y%m%d%H`/g" package.json
    - arch -x86_64 npx yarn install || arch -x86_64 npx yarn install
  build_script:
    - arch -x86_64 npx yarn build
  build_binary_script:
    - export PATH="/usr/local/opt/node@16/bin:/usr/local/bin:$PATH"
    - arch -x86_64 npx yarn dist || arch -x86_64 npx yarn dist
  binary_artifacts:
    path: ./binaries/*

windows_task:
  alias: windows
  windows_container:
    image: cirrusci/windowsservercore:visualstudio2022-2022.06.23
  env:
    CIRRUS_SHELL: bash
    PATH: C:\Python310\Scripts\;C:\Python310\;%PATH%;C:\Program Files\nodejs\;C:\Program Files\Git\cmd;C:\Users\User\AppData\Local\Microsoft\WindowsApps;C:\Users\User\AppData\Roaming\npm;C:\Program Files\Microsoft Visual Studio\2022\Community\Msbuild\Current\Bin\
  install_script:
    - choco install nodejs --version=14.15.0 -y
    - choco install python --version=3.10.3	-y
    - choco install git visualstudio2019-workload-vctools -y
    - npm config set python 'C:\Python310\python.exe'
    - npx yarn install || sleep 1 && npx yarn install
  build_script:
    - npx yarn build || npx yarn build || npx yarn build
  build_binary_script:
    - sed -i -e "s/[0-9]*-dev/`date -u +%Y%m%d%H`/g" package.json
    - npx yarn dist || npx yarn dist || npx yarn dist
  binary_artifacts:
    path: .\binaries\*
